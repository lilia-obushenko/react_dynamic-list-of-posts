{"version":3,"sources":["components/PostItem/PostItem.tsx","components/PostsList/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm/Field/Field.tsx","components/NewCommentForm/TextArea/TextArea.tsx","components/NewCommentForm/NewCommentForm.tsx","hooks/useForm.tsx","utils/fetchClient.ts","api/comments.ts","components/CommentItem/CommentItem.tsx","components/PostDetails/PostDetails.tsx","components/UserInfo/UserInfo.tsx","components/SelectComponent/SelectComponent.tsx","components/UserSelector/UserSelector.tsx","App.tsx","api/users.ts","api/posts.ts","index.tsx"],"names":["PostItem","props","post","onPostSelect","selectedPostId","id","title","isSelected","_jsxs","children","_jsx","className","type","cn","onClick","postId","PostsList","posts","map","Loader","Field","value","label","onChange","errorType","notValid","placeHolder","htmlFor","placeholder","TextArea","name","NewCommentForm","onAddComment","isLoading","_useForm","options","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","commentText","setCommentText","_useState7","_useState8","nameError","setNameError","_useState9","_useState10","emailError","setEmailError","_useState11","_useState12","notValidEmail","setNotValidEmail","_useState13","_useState14","commentError","setCommentError","emailRegex","handleClear","handleSubmit","event","preventDefault","trim","length","test","newComment","body","handleEmailChange","target","handleNameChange","handleTextChange","useForm","onSubmit","request","url","delay","data","arguments","undefined","method","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","json","client","addComment","removeComment","commentId","concat","CommentItem","comment","onDelete","href","PostDetails","selectedPost","comments","setComments","isFormVisible","setIsFormVisible","setIsLoading","isError","setIsError","fetchComments","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commentsFromServer","wrap","_context","prev","next","sent","t0","finish","stop","apply","addNewComment","useCallback","_ref2","_callee2","commentToAdd","_context2","_objectSpread","prevState","_toConsumableArray","_x","deleteComment","_ref3","_callee3","_context3","filter","_ref4","_x2","noComments","isVisibleButton","useEffect","UserInfo","user","onSelect","currentUserName","SelectComponent","onOpen","UserSelector","users","onUserSelect","isOpen","setIsOpen","currentUser","setCurrentUser","dropdown","useRef","handleClick","_dropdown$current","current","contains","document","addEventListener","removeEventListener","handleOpen","handleSelect","ref","role","App","setUsers","setPosts","selectedUserId","setSelectedUserId","setSelectedPostId","noPosts","setNoPosts","fetchUsers","usersFromServer","fetchUserPosts","postsFromServer","handleSelectUser","useMemo","find","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a94de7aa.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Post } from '../../types/Post';\n\ninterface Props {\n  post: Post,\n  selectedPostId: number,\n  onPostSelect: (post: number) => void\n}\n\nexport const PostItem: FC<Props> = (props) => {\n  const { post, onPostSelect, selectedPostId } = props;\n  const { id, title } = post;\n\n  const handleSelectPost = (postId: number) => {\n    if (postId === selectedPostId) {\n      onPostSelect(0);\n\n      return;\n    }\n\n    onPostSelect(postId);\n  };\n\n  const isSelected = selectedPostId === id;\n\n  return (\n    <tr data-cy=\"Post\">\n      <td data-cy=\"PostId\">\n        {id}\n      </td>\n\n      <td data-cy=\"PostTitle\">\n        {title}\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          type=\"button\"\n          data-cy=\"PostButton\"\n          className={cn('button is-link', {\n            'is-light': !isSelected,\n          })}\n          onClick={() => handleSelectPost(id)}\n        >\n          {isSelected\n            ? 'Close'\n            : 'Open'}\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Post } from '../../types/Post';\nimport { PostItem } from '../PostItem/PostItem';\n\ninterface Props {\n  posts: Post[],\n  selectedPostId: number,\n  onPostSelect: (postId: number) => void\n}\n\nexport const PostsList: FC<Props> = (props) => {\n  const {\n    posts,\n    onPostSelect,\n    selectedPostId,\n  } = props;\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <PostItem\n              key={post.id}\n              post={post}\n              onPostSelect={onPostSelect}\n              selectedPostId={selectedPostId}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { ChangeEvent, FC } from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  value: string,\n  label: string,\n  errorType: boolean,\n  placeHolder: string,\n  notValid?: boolean,\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport const Field: FC<Props> = (props) => {\n  const {\n    value,\n    label,\n    onChange,\n    errorType,\n    notValid,\n    placeHolder,\n  } = props;\n\n  return (\n    <div className=\"field\" data-cy=\"NameField\">\n      <label className=\"label\" htmlFor=\"comment-author-name\">\n        {label}\n      </label>\n\n      <div className=\"control has-icons-left has-icons-right\">\n        <input\n          value={value}\n          placeholder={placeHolder}\n          className={cn('input', {\n            'is-danger': errorType,\n          })}\n          onChange={onChange}\n        />\n\n        <span className=\"icon is-small is-left\">\n          <i className=\"fas fa-user\" />\n        </span>\n\n        {errorType && (\n          <span\n            className=\"icon is-small is-right has-text-danger\"\n            data-cy=\"ErrorIcon\"\n          >\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n      </div>\n\n      {errorType && (\n        <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n          Field is required\n        </p>\n      )}\n\n      {(!errorType && notValid) && (\n        <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n          Email is not valid\n        </p>\n      )}\n    </div>\n  );\n};\n","import { ChangeEvent, FC } from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  value: string,\n  label: string,\n  errorType: boolean,\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void\n}\n\nexport const TextArea: FC<Props> = (props) => {\n  const {\n    value,\n    label,\n    errorType,\n    onChange,\n  } = props;\n\n  return (\n    <div className=\"field\" data-cy=\"BodyField\">\n      <label className=\"label\" htmlFor=\"comment-body\">\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <textarea\n          id=\"comment-body\"\n          name=\"body\"\n          value={value}\n          placeholder=\"Type comment here\"\n          className={cn('textarea', {\n            'is-danger': errorType,\n          })}\n          onChange={onChange}\n        />\n      </div>\n\n      {errorType && (\n        <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n          Enter some text\n        </p>\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { CommentData } from '../../types/Comment';\nimport { useForm } from '../../hooks/useForm';\nimport { Field } from './Field/Field';\nimport { TextArea } from './TextArea/TextArea';\n\ninterface Props {\n  isLoading: boolean;\n  onAddComment: (comment: CommentData) => void;\n}\n\nexport const NewCommentForm: FC<Props> = (props) => {\n  const { onAddComment, isLoading } = props;\n  const {\n    name,\n    email,\n    commentText,\n    nameError,\n    emailError,\n    commentError,\n    notValidEmail,\n    handleSubmit,\n    handleClear,\n    handleEmailChange,\n    handleNameChange,\n    handleTextChange,\n  } = useForm({ onAddComment });\n\n  return (\n    <form\n      data-cy=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <Field\n        value={name}\n        label=\"Author Name\"\n        placeHolder=\"Name Surname\"\n        errorType={nameError}\n        onChange={handleNameChange}\n      />\n\n      <Field\n        value={email}\n        label=\"Author Email\"\n        placeHolder=\"email@test.com\"\n        errorType={emailError}\n        notValid={notValidEmail}\n        onChange={handleEmailChange}\n      />\n\n      <TextArea\n        value={commentText}\n        label=\"Comment Text\"\n        errorType={commentError}\n        onChange={handleTextChange}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={cn('button is-link', {\n              'is-loading': isLoading,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-link is-light\"\n            onClick={handleClear}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport { CommentData } from '../types/Comment';\n\ninterface Options {\n  onAddComment: (comment: CommentData) => void\n}\n\nexport const useForm = (options: Options) => {\n  const { onAddComment } = options;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [notValidEmail, setNotValidEmail] = useState(false);\n  const [commentError, setCommentError] = useState(false);\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!name.trim() || name.length < 3) {\n      setNameError(true);\n    }\n\n    if (!email.trim()) {\n      setEmailError(true);\n    }\n\n    if (!commentText.trim()) {\n      setCommentError(true);\n    }\n\n    if (!emailRegex.test(email)) {\n      setNotValidEmail(true);\n    }\n\n    const isError = (\n      !name.trim()\n      || !email.trim()\n      || !commentText.trim()\n      || !emailRegex.test(email)\n    );\n\n    if (isError) {\n      return;\n    }\n\n    const newComment = {\n      name: name.trim(),\n      email,\n      body: commentText.trim(),\n    };\n\n    onAddComment(newComment);\n    setCommentText('');\n  };\n\n  const handleNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setNameError(false);\n    setName(event.target.value);\n  };\n\n  const handleEmailChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setEmailError(false);\n    setEmail(event.target.value);\n    setNotValidEmail(false);\n  };\n\n  const handleTextChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    setCommentError(false);\n    setCommentText(event.target.value);\n  };\n\n  const handleClear = () => {\n    setName('');\n    setEmail('');\n    setCommentText('');\n    setCommentError(false);\n    setEmailError(false);\n    setNameError(false);\n    setNotValidEmail(false);\n  };\n\n  return {\n    name,\n    email,\n    commentText,\n    nameError,\n    emailError,\n    commentError,\n    notValidEmail,\n    handleClear,\n    handleSubmit,\n    handleEmailChange,\n    handleNameChange,\n    handleTextChange,\n  };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { CommentData, Comment } from '../types/Comment';\nimport { client } from '../utils/fetchClient';\n\nexport const getComments = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const addComment = (newComment: CommentData) => {\n  return client.post<Comment>('/comments', newComment);\n};\n\nexport const removeComment = (commentId: number) => {\n  return client.delete(`/comments/${commentId}`);\n};\n","import { FC } from 'react';\nimport { Comment } from '../../types/Comment';\n\ninterface Props {\n  comment: Comment,\n  onDelete: (commentId: number) => void;\n}\n\nexport const CommentItem: FC<Props> = (props) => {\n  const { comment, onDelete } = props;\n  const {\n    name,\n    body,\n    email,\n    id,\n  } = comment;\n\n  return (\n    <article\n      className=\"message is-small\"\n      data-cy=\"Comment\"\n    >\n      <div className=\"message-header\">\n        <a\n          href={`mailto:${email}`}\n          data-cy=\"CommentAuthor\"\n        >\n          {name}\n        </a>\n\n        <button\n          data-cy=\"CommentDelete\"\n          type=\"button\"\n          className=\"delete is-small\"\n          aria-label=\"delete\"\n          onClick={() => onDelete(id)}\n        >\n          delete button\n        </button>\n      </div>\n\n      <div\n        className=\"message-body\"\n        data-cy=\"CommentBody\"\n      >\n        {body}\n      </div>\n    </article>\n  );\n};\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm/NewCommentForm';\nimport { Post } from '../../types/Post';\nimport { Comment, CommentData } from '../../types/Comment';\nimport { addComment, getComments, removeComment } from '../../api/comments';\nimport { CommentItem } from '../CommentItem/CommentItem';\n\ninterface Props {\n  selectedPost: Post,\n}\n\nexport const PostDetails: FC<Props> = (props) => {\n  const { selectedPost } = props;\n\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const fetchComments = async () => {\n    setIsLoading(true);\n\n    try {\n      const commentsFromServer = await getComments(selectedPost.id);\n\n      setComments(commentsFromServer);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const addNewComment = useCallback(\n    async (newComment: CommentData) => {\n      setIsLoading(true);\n\n      try {\n        const commentToAdd = {\n          ...newComment,\n          postId: selectedPost.id,\n        };\n\n        const comment = await addComment(commentToAdd);\n\n        setComments(prevState => [...prevState, comment]);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [],\n  );\n\n  const deleteComment = useCallback(\n    async (commentId: number) => {\n      try {\n        setComments(prevState => {\n          return prevState.filter(({ id }) => id !== commentId);\n        });\n\n        await removeComment(commentId);\n      } catch {\n        setIsError(true);\n      }\n    }, [],\n  );\n\n  const noComments = !comments.length && !isError && !isLoading;\n  const isVisibleButton = !isFormVisible && !isError && !isLoading;\n\n  useEffect(() => {\n    fetchComments();\n    setIsFormVisible(false);\n  }, [selectedPost]);\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${selectedPost.id}: ${selectedPost.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {selectedPost.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <div\n              className=\"notification is-danger\"\n              data-cy=\"CommentsError\"\n            >\n              Something went wrong\n            </div>\n          )}\n\n          {noComments && (\n            <p\n              className=\"title is-4\"\n              data-cy=\"NoCommentsMessage\"\n            >\n              No comments yet\n            </p>\n          )}\n\n          {comments.length > 0 && (\n            <p className=\"title is-4\">\n              Comments:\n            </p>\n          )}\n\n          {comments.map(comment => (\n            <CommentItem\n              key={comment.id}\n              comment={comment}\n              onDelete={deleteComment}\n            />\n          ))}\n\n          {isVisibleButton && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setIsFormVisible(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {isFormVisible && (\n          <NewCommentForm\n            onAddComment={addNewComment}\n            isLoading={isLoading}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n  currentUserName: string,\n  onSelect: (user: User) => void\n}\n\nexport const UserInfo: FC<Props> = (props) => {\n  const { user, onSelect, currentUserName } = props;\n  const { id, name } = user;\n\n  return (\n    <a\n      key={id}\n      href={`#user-${id}`}\n      className={cn('dropdown-item', {\n        'is-active': currentUserName === user.name,\n      })}\n      onClick={() => onSelect(user)}\n    >\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  onOpen: () => void,\n  currentUserName: string,\n}\n\nexport const SelectComponent: FC<Props> = (props) => {\n  const { onOpen, currentUserName } = props;\n\n  return (\n    <div className=\"dropdown-trigger\">\n      <button\n        type=\"button\"\n        className=\"button\"\n        aria-haspopup=\"true\"\n        aria-controls=\"dropdown-menu\"\n        onClick={onOpen}\n      >\n        <span>\n          {currentUserName}\n        </span>\n\n        <span className=\"icon is-small\">\n          <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n        </span>\n      </button>\n    </div>\n  );\n};\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport cn from 'classnames';\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { SelectComponent } from '../SelectComponent/SelectComponent';\n\ninterface Props {\n  users: User[];\n  onUserSelect: (user: User) => void\n}\n\nexport const UserSelector: FC<Props> = (props) => {\n  const { users, onUserSelect } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState('Choose a user');\n  const dropdown = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n\n      if (!dropdown.current?.contains(target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClick);\n\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  const handleOpen = useCallback(() => {\n    setIsOpen(prevState => !prevState);\n  }, []);\n\n  const handleSelect = useCallback((user: User) => {\n    onUserSelect(user);\n    setIsOpen(false);\n    setCurrentUser(user.name);\n  }, []);\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      ref={dropdown}\n      className={cn('dropdown', {\n        'is-active': isOpen,\n      })}\n    >\n\n      <SelectComponent\n        currentUserName={currentUser}\n        onOpen={handleOpen}\n      />\n\n      <div\n        className=\"dropdown-menu\"\n        id=\"dropdown-menu\"\n        role=\"menu\"\n      >\n        <div className=\"dropdown-content\">\n          {users.map(user => (\n            <UserInfo\n              key={user.id}\n              user={user}\n              currentUserName={currentUser}\n              onSelect={handleSelect}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { PostsList } from './components/PostsList/PostsList';\nimport { PostDetails } from './components/PostDetails/PostDetails';\nimport { UserSelector } from './components/UserSelector/UserSelector';\nimport { Loader } from './components/Loader';\nimport { getUsers } from './api/users';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\nimport { getPosts } from './api/posts';\n\nexport const App: FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [noPosts, setNoPosts] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchUsers = async () => {\n    try {\n      const usersFromServer = await getUsers();\n\n      setUsers(usersFromServer);\n    } catch {\n      setIsError(true);\n    }\n  };\n\n  const fetchUserPosts = async () => {\n    setNoPosts(false);\n    setIsLoading(true);\n    setIsError(false);\n\n    try {\n      const postsFromServer = await getPosts(selectedUserId);\n\n      if (postsFromServer.length === 0) {\n        setNoPosts(true);\n      }\n\n      setPosts(postsFromServer);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSelectUser = useCallback((user: User) => {\n    if (user.id !== selectedUserId) {\n      setSelectedUserId(user.id);\n      setSelectedPostId(0);\n      setPosts([]);\n    }\n  }, [selectedUserId]);\n\n  const selectedPost = useMemo(() => {\n    return posts.find(({ id }) => id === selectedPostId);\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    if (selectedUserId) {\n      fetchUserPosts();\n    }\n  }, [selectedUserId]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  onUserSelect={handleSelectUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUserId && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {isLoading && (\n                  <Loader />\n                )}\n\n                {isError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {noPosts && (\n                  <div\n                    className=\"notification is-warning\"\n                    data-cy=\"NoPostsYet\"\n                  >\n                    No posts yet\n                  </div>\n                )}\n\n                {posts.length > 0 && (\n                  <PostsList\n                    posts={posts}\n                    selectedPostId={selectedPostId}\n                    onPostSelect={setSelectedPostId}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={cn(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': selectedPostId > 0 },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              {selectedPost && (\n                <PostDetails\n                  selectedPost={selectedPost}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n","import { Post } from '../types/Post';\nimport { client } from '../utils/fetchClient';\n\nexport const getPosts = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}